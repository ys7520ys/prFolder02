semantic HTML은 웹 표준과 웹 접근성을 동시에 준수할 수 있는 중요한 방법이며, semantic HTML 요소는 그 의미의 값을 스스로 설명해주기 때문에 스크린 리더 등 보조 기술이 콘텐츠 구조를 쉽게 파악할 수 있도록 해준다.

레이아웃
  - <header></header>
      페이지나 섹션의 헤더로 사용되며 일반적으로 로고, 네비게이션, 검색창 등을 포함한다.
      L> ex <header>의 값을 페이지 전체의 헤더로 사용할 수도 있고, article안에 있는 개별적인 블록의 헤더로도 사용할 수 있다.
            HTML에서는 페이지 전체의 <header>와 개별 섹션의 <header> 모두 사용할 수 있다. 각각이 <header> 는 서로 다른 계층 구조를 표현할 수 있기 때문에, 하나의 HTML 문서에서 여러 개의 요소를 사용해도 문제가 없다.

        콘텐츠 내 제목과 설명
          - 제목요소 -
              <h1~h6>: 페이지 구조를 나타내는 제목 요소는 순차적으로 구성하는 것이 중요하며, h1부터 하위 제목을 순서대로 배치해서 정보의 계층 구조를 명확히 구성해야 한다. 스크린리더는 이를 통해서 페이지 구조를 쉽게 파악할 수 있게 된다. 
          - 리스트 -
              <ul>,<ol>,<dl>: 목록이나 정의된 정보를 나열할 때는 해당 요소를 사용해서 콘텐츠의 구조를 명확하게 구분해야 한다. 내비게이션 메뉴는 <ul>로 감싸고, 단어와 정의를 설명할 때는 <dl>의 값을 사용한다.

        상호작용 요소 구성
          - 버튼 -
              <button>: 클릭 이벤트를 수행하는 상호작용 요소는  일반적으로 <button>의 값을 사용한다. <div> <span>으로 버튼으로 구성하면 웹 접근성 측면에서 문제가 발생할 수 있다. 추가적으로 버튼의 역할이 명확하지 않다면 aria-label을 사용해서 설명을 하는 것이 중요하다.
          - 링크 -
              <a>: 페이지 이동 또는 외부 링크 연결에는 a href 요소를 일반적으로 사용한다. 링크의 역할 을 명확하게 하기 위해서 의미가 없는 링크 텍스트는 피하고, aria-label을 사용해서 설명을 추가할 수 있습니다.

        폼 요소 구성
              <label>: 폼 입력 요소에는 반드시 label을 연결한다. 이때 for속성을 활용해서 input과 연결하면 스크린리더 사용자가 폼 요소의 역할을 쉽게 이해할 수 있다. 
              L> ex 로그인 폼에는 아이디와 비밀번호 입력란에 각각의 레이블이 존재해야 한다. 

              필수 필드 표시: 필수 입력 필드는 시각적으로만 표시하지 말고 스크린리더가 이를 알 수 있도록 aria-required="true"를 추가해야 한다.
        
        미디어 요소 접근성
              이미지 대체 텍스트 alt 속성: 모든 이미지에 적절한 alt속성을 제공해야 한다. 이미지가 장식적인 경우 alt=""로 설정해서 스크린리더가 해당 이미지를 건너 갈 수 있도록 해야 한다. 

              비디오/오디오 대체 텍스트 밎 자막: 비디오에는 자막을 제공하고, 오디오 콘텐츠에는 대체 텍스트나 텍스트 대본을 제공해야 한다. <track> 요소를 사용해서 자막을 추가할 수 있다. 

        시맨틱 요소에 추가적인 접근성 속성 활용
              role 속성: 스크린리더가 특정요소의 역할을 잘 인식하지 못하는 경우, role 속성을 추가해서 역할을 명확하게 만들 수 있다. 
              L> ex 커스텀 버튼에는 role="button" 을 명시적으로 지정할 수 있다.

              aira 속성: 콘텐츠의 동적 변화(ex 경고 메세지) 등을 스크린리더가 인식할 수 있도록 aria-live, aria-expanded 와 같은 속성을 사용해야 한다.


  - <nav></nav>
      페이지의 주요 네비게이션 영역에서 사용하며, 스크린리더는 이 요소를 탐색 영역으로 인식하므로 메뉴나 링크가 모아진 곳을 <nav>로 감싸면 웹접근성에 도움이 된다. 네비게이션 메뉴는 사이트맵과 같은 의미로 이용될 때가 가장 적합하다.

  - <main></main>
      페이지의 주요 컨텐츠를 포함하며, <main>은 페이지당 하나만 사용하며, 해당 요소가 페이지의 핵심 콘텐츠를 설명한다.
      L> ex 블로그 포스트의 본문이나 상품 페이지의 상품 상세 정보가 들어가게 된다.

  - <section></section>
      독립적인 주제를 가진 영역의 값을 정의할 때 사용되며, section 요소는 주제별로 묶인 콘텐츠를 설명할 때 주로 사용된다. 
      L> ex 뉴스 기사 or 블로그 포스트 목록 등을 감싸는 곳에 사용될 수 있다 추가적으로 제목이 필요한 경우에 <h2>등의 제목 요소를 추가하여 주제를 명확하게 구분해야 한다. 

  - <article></article>
      독립적으로 유통이 가능하거나 의미의 값이 완전한 콘텐츠 블록에서 사용된다. 그리고 <article> 요소는 페이지 내에서 개별적으로 사용되어도 그 의미가 유지된다.
      L> ex 블로그 포스트, 뉴스 기사, 상품 정보 등이 포함된다.

  - <aside></aside>
      주요 컨텐츠가 관련된 보조 정보에 사용된다.
      L> ex 광고, 관련 링크, 사이드바 콘텐츠 등이 여기에 포함된다.