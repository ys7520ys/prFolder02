웹표준과 접근성을 준수하기
  1. sementic HTML
    div, span 값 대신에, 가능한 header, nav, main, section, article, footer와 같은 시맨틱 태그를 사용해서 구조를 명확하게 밝혀야 한다. 
    L> 이렇게 설정함으로 스크린리더가 페이지의 구조를 쉽게 파악할 수 있다.

  2. labeling(aria-label, aria-labelledby)
    aria-label이나 aria-labelledby로 버튼이나 입력 요소에 적절한 설명의 값을 추가해야 한다. 시각적 레이블이 없는 요소에 접근성을 추가할 때 사용된다.

  3. Focusable Elements
    속성을 사용해서포커스의 순서를 조정하고, 키보드로 탐색하기 쉽게 만들어야 한다. 일반적으로 button, a, input 필드와 같은 포커스가 가능한 요소가 잘 관리되어야 한다.
  
  4. Keyboard Navigation
    모든 기능이 키보드만으로 동작이 가능해야 하며, Enter, Space, Escape와 같은 키 이벤트를 핸들링하여 키보드 사용자에게도 접근성을 제공해야 한다.

  5. Color Contrast
    텍스트와 백경의 색상대비가 적절한지 확인해야 한다. WCAG에서는 최소한 4.5 : 1의 대비 비율의 값을 권장하고 있다.

  6. Alternative Text for Images
    모든 이미지에는 대체할 텍스트(alt)의 값을 제공해야 하며, 만약 장식적인 이미지가 존재한다고 하면 해당 이미지는 alt 속성(alt="")를 사용해서 스크린리더가 이러한 이미지의 값을 무시할 수 있도록 설정해야 한다.

  7. Accessible Forms 
    label 태그를 연결하거나 aria-label을 사용하여 추가적인 설명을 제공해야 한다. 오류 메세지와 필수 항목의 값도 사용자가 명확히 알 수 있도록 전달해야 한다.

  8. Status Message (aria-live)
    사용자가 상호작용을 할 때 즉각적인 변화에 대해서 스크린리더가 알 수 있도록 aria-live의 값을 설정해야 한다. 
    L> ex 장바구니에 제품을 추가한 경우, 예약을 진행한 경우 등등

  9. Focus Management 
    팝업이나 모달 창을 열 때 초기 포커스의 값을 유지하고, 다시 닫을 때는 이전 포커스의 값으로 돌아가게 설정해야 한다.

  10. 시간 제한에서의 웹표준과 접근성
    웹 콘텐츠에서 시간 제한이 있는 경우에 접근성을 보장하기 위해서 주의해야 할 사항들이 존재한다.
    
      - 경고 및 연장 기능
          사용자가 로그아웃되기 전에 제한 시간이 다가오고 있다는 경고를 제공하고, 시간을 연장할 수 있는 옵션이 존재해야 한다. WCAG에서는 사용자에게 경고와 함께 시간을 연장하거나 완전히 비활성화할 수 있는 기능을 권장함
      
      - 시간 제한을 피할 수 있는 옵션
          사용자의 타이핑 속도가 느리거나 보조기기의 사용으로 인하여 시간이 더 걸릴 수 있기 때문에 입력 작업에서 시간이 좀 더 필요할 수 있다. 가능한한 시간 제한이 존재하는 작업 자체를 멀리하거나, 사용자가 조절할 수 있도록 구성해야 한다.

      - 일관된 상태 업데이트
        자바스크립트나 AJAX로 실시간으로 업데이트가 진행되는 경우에 aria-live 속성으로 상태를 알리거나 페이지를 자동으로 갱신하지 않도록 구성해야 한다. 
        L> ex 채팅이나 피드 갱신 같은 상황에서는 스크린리더가 이러한 정보를 놓치지 않도록 보장을 해야 한다. 