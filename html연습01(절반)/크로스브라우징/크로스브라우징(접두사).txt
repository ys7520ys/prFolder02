브라우저 호환성을 위한 접두사(prefix)

  --webkit--, -moz-, -ms- 등이 존재한다.
  
  언제 접두사를 사용해야 하는가:
    1. 새롭고 실험적인 css속성 (flexbox, 그라데이션, 애니메이션, 트랜스폼, 트랜지션) 같은 속성들이 처음에 도입 되었을 때는 브라우저별 접두사가 필요했지만 현재는 대부분의 최신 브라우저에서 이러한 속성들이 표준화되어서 접두사를 이용하지 않아도 대부분 동작이 가능하다.

    2. 브라우저 호환성이 필요한 특정 속성:
    일부 속성(특히 grid, filter)은 특정 브라우저에서만 접두사가 필요하다.

    3. CSS 호환성 도구 사용:
    Can I use 사이트에서 각 CSS속성의 브라우저 호환성을 확인하고, 접두사가 필요한 속성만 선별해서 추가하는 것이 좋다.

  효율적인 접두사 관리법:
    Autoprefixer 도구 사용:
      Autoprefixer는 빌드 과정에서 접두사를 자동으로 추가해주는 도구로, PostCSS 플러그인으로 많이 사용한다.
      Autoprefixer는 최신 브라우저 지원 상태를 기준으로 필요한 속성에만 접두사를 추가하므로, 코드가 불필요하게 길어지는 것을 방지할 수 있다. 
    
    접두사가 불필요한 최신 브라우저만 지원하는 경우:
      만약 구형 브라우저나 호환성이 낮은 브라우저에 대한 지원이 필요 없다면, 접두사를 추가하지 않아도 된다.

(예시)접두사를 효율적으로 추가하는 방식:
  .example {
    display: -webkit-flex; /* 오래된 Safari용 */
    display: flex;
    transition: -webkit-transform 0.3s ease; /* 오래된 Safari용 */
    transition: transform 0.3s ease;
  }
  L> Autoprefixer를 사용하면 CSS를 간단하게 작성하고 필요한 경우에 빌드 과정에서 자동으로 접두사를 추가할 수 있다.

결론:
  모든 속성에 접두사를 붙일 필요성은 없으며, 특정 호환성 문제가 발생할 수 있는 속성에만 접두사를 사용하는 것이 좋다.
  Autoprefixer와 같은 도구를 사용하면 필요할 때만 자동으로 접두사를 추가해주기 때문에 코드의 복잡성을 줄일 수 있다.







(Vender Prefix)
  크로스 브라우저를 개발하기 위해 CSS 속성 앞에 브라우저 별 접두사를 붙인다.
    1. 크롬 : -webkit-
    2. 사파리 : -webkit-
    3. 파이어폭스 : moz- (mozila 라는 단체가 파이어폭스를 만들었기 때문에)
    4. 오페라 : -o-, -webkit-
    5. 익스플로러 : -ms-

  Sass에서의 Prefix:
    .selector {
      -webkit-transform: rotate(45deg);
      -ms-transform: rotate(45deg);
      transform: rotate(45deg);
    }






X-UA-Compatible(브라우저 호환성):
  마이크로소프트에서 만든 익스플로러 브라우저는 호환성 보기 모드가 존재하는데 이는 사용자가 원하는 브라우저에 따라 오래된 브라우저에서 정상적으로 출력되지 않는 이슈가 발생할 수 있다.
  최신 브라우저만 지원하는 환경이라면 사실 이 태그를 사용하는 의미가 없다.
  하지만 일부 웹사이트는 오래된 버전의 브라우저까지 모두 지원하게 되는데 IE에서의 호환성 보기와 관련된 태그이다.

  IE=edge는 IE 브라우저의 최신 버전의 엔진을 사용하라는 뜻이다.
  그 외에도 IE=5, IE=7 등등이 존재하고, 해당 렌더링을 적용하라는 것이다.
  L> <meta http-equiv="X-UA-Compatible" content="IE-edge" />





viewport(모바일 반응 페이지):
  meta viewprot 태그는 모바일 브라우저의 뷰포트 크기 조절을 위해 만들어졌다.
  여기서 뷰포트는 웹페이지가 사용자에게 보여지는 영역을 의미한다.
  L> <meta name="viewport" content="width=device-width, initial-scale=1.0">

  pc에서는 브라우저의 크기를 변경함에 따라서 view port의 크기를 바꿀 수 있다.
  반면 모바일에서는 화면크기가 고정되어 있기 때문에 뷰포트의 배율을 조절하여 내용을 봐야 한다.
  뷰포트의 크기 조절이 필요한 이유는 pc에서는 보는 화면을 모바일로 봤을 때 잘 볼 수 있게 하기 위해서이다.

  뷰포트의 너비가 너무 커서 사진이 작게 보이거나, 혹은 스케일이 안맞아서 사진이 화면을 넘어가는 경우가 발생한다. 그래서 일반적으로 뷰포트의 너비를 장치너비로 설정하고, 스케일을 1.0(100%)로 적용한다.





charset(문자 코드의 종류 설정):
  인코딩하는 방식을 선언하는 이유는 문자 깨짐 현상 등 심각한 오류가 생길 수 있기 때문에 이를 방지하기 위해서 사용한다.
  